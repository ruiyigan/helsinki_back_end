{"version":3,"sources":["components/Filter.tsx","components/PersonForm.js","components/Person.js","components/FilteredPersons.js","services/personService.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","description","onChange","value","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","className","type","Person","person","setRemoveID","name","number","onClick","id","FilteredPersons","personfiltered","map","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","removeID","useEffect","personService","req","filter","personContact","justnames","toLowerCase","includes","event","target","preventDefault","window","confirm","updateID","find","returnedPerson","console","log","concat","ReactDOM","render","document","getElementById"],"mappings":"mMAsBeA,EAbA,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,mBAAoBC,EAA6B,EAA7BA,YAC5C,OACA,iCACCA,EACD,uBACIC,SAAUF,EACVG,MAAOJ,QCUAK,EAvBI,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,UAAWC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,mBAClE,OACI,uBAAMC,SAAUL,EAAhB,UACA,yCACQ,uBACAF,MAAOG,EACPJ,SAAUM,OAGlB,2CACY,uBACJL,MAAOI,EACPL,SAAUO,OAGlB,8BACI,wBAAQE,UAAU,aAAaC,KAAK,SAApC,uBCLGC,EAXA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACxB,OACE,gCACE,8BAAID,EAAOE,KAAX,IAAkBF,EAAOG,UACzB,wBAAQC,QAAS,kBAAMH,EAAYD,EAAOK,KAA1C,wBCGSC,EANS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgBN,EAAkB,EAAlBA,YACzC,OACEM,EAAeC,KAAI,SAAAR,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,EAAQC,YAAaA,GAA1CD,EAAOE,U,gBCJ/CO,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACT,EAAIU,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBJ,GAAMU,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACT,GAEZ,OADgBK,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BJ,IAC5BO,KAAKP,IC2ETc,G,MAxFH,WACV,IAUA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAO5B,EAAP,KAAgB+B,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAO3B,EAAP,KAAkB+B,EAAlB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOnC,EAAP,KAAkBwC,EAAlB,KACA,EAAgCL,mBAAS,GAAzC,mBAAOM,EAAP,KAAiBzB,EAAjB,KAEA0B,qBAAU,WACS,IAAbD,GACFE,EACUF,GACPd,MAAK,SAAAiB,GACJP,EAAWD,EAAQS,QAAO,SAAA9B,GAAM,OAAIA,EAAOK,KAAOqB,WAGvD,CAACA,IAKJC,qBAAU,WACRC,IAEGhB,MAAK,SAAAmB,GACJT,EAAWS,QAEd,IAEH,IAAMC,EAAYX,EAAQb,KAAI,SAAAR,GAAM,OAAIA,EAAOE,QACzCK,EAAiBc,EAAQS,QAAO,SAAA9B,GAAM,OAAIA,EAAOE,KAAK+B,cAAcC,SAASjD,EAAUgD,kBAqC7F,OACE,gCACE,2CACA,cAAC,EAAD,CAAQhD,UAAWA,EAAWC,mBAxEP,SAACiD,GACxBV,EAAaU,EAAMC,OAAO/C,UAwE1B,2CACA,cAAC,EAAD,CAAYE,UAxCE,SAAC4C,GAEb,GADAA,EAAME,iBACFL,EAAUE,SAAS1C,GACnB,GAAI8C,OAAOC,QAAP,UAAkB/C,EAAlB,2EAAoG,CACtG,IAAMgD,EAAWnB,EAAQoB,MAAK,SAAAzC,GAAM,OAAIA,EAAOE,OAASV,KAASa,GAMjEuB,EACQY,EANW,CACjBtC,KAAOV,EACPW,OAASV,IAKVmB,MAAK,SAAA8B,GACJpB,EAAWD,EAAQb,KAAI,SAAAR,GAAM,OAAIA,EAAOK,KAAOmC,EAAWxC,EAAS0C,MACnEnB,EAAW,IACXC,EAAa,YAGfmB,QAAQC,IAAI,uBAOdhB,EAJqB,CACjB1B,KAAMV,EACNW,OAAQV,IAITmB,MAAK,SAAA4B,GACJlB,EAAWD,EAAQwB,OAAOL,IAC1BjB,EAAW,IACXC,EAAa,QAUWhC,QAASA,EAASC,UAAWA,EAAWE,mBA7EnD,SAACwC,GACxBX,EAAaW,EAAMC,OAAO/C,QA4EwFK,iBAhF7F,SAACyC,GACpBZ,EAAWY,EAAMC,OAAO/C,UAgF1B,yCACA,cAAC,EAAD,CAAiBkB,eAAgBA,EAAgBN,YAAaA,SCtFpE6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4fe00281.chunk.js","sourcesContent":["import React from 'react'\n\ntype FilterType = {\n    newFilter: string | number | readonly string[],\n    handleFilterChange: React.ChangeEventHandler<HTMLInputElement>,\n    description: String,\n}\n\n\nconst Filter = ({newFilter, handleFilterChange, description}: FilterType) => {\n    return(\n    <form>\n    {description} \n    <input \n        onChange={handleFilterChange}\n        value={newFilter}\n        />\n    </form>\n    )\n}\n\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\n    return (\n        <form onSubmit={addPerson}>\n        <div>\n          name: <input\n                value={newName}\n                onChange={handleNameChange}\n                />\n        </div>\n        <div>\n            number: <input\n                value={newNumber}\n                onChange={handleNumberChange}\n                />\n        </div>\n        <div>\n            <button className=\"bg-sky-600\" type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, setRemoveID }) => {\n  return (\n    <div>\n      <p>{person.name} {person.number}</p>\n      <button onClick={() => setRemoveID(person.id)}>\n          delete\n      </button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst FilteredPersons = ({ personfiltered, setRemoveID }) => {\n  return (\n    personfiltered.map(person => <Person key={person.name} person={person} setRemoveID={setRemoveID}/>)\n  )\n}\n\nexport default FilteredPersons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(id)\n}\n\nexport default { \n  getAll, \n  create, \n  update,\n  remove\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport FilteredPersons from './components/FilteredPersons'\nimport personService from './services/personService'\nimport './App.css'\n\nconst App = () => {\n  const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n    }\n  const handleFilterChange = (event) => {\n      setNewFilter(event.target.value)\n    }\n\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [removeID, setRemoveID] = useState(0)\n\n  useEffect(() => {\n    if (removeID !== 0) {\n      personService\n        .remove(removeID)\n        .then(req => {\n          setPersons(persons.filter(person => person.id !== removeID))\n        })\n    }\n  }, [removeID])\n\n  // note the best way to be very honest: probably better with redux store or something\n  // alternatively will be to do higher order function but that requires you to unabstract some stuff\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(personContact => {\n        setPersons(personContact)\n      })\n  }, [])\n\n  const justnames = persons.map(person => person.name)\n  const personfiltered = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const addPerson = (event) => {\n        event.preventDefault()\n        if (justnames.includes(newName)) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n              const updateID = persons.find(person => person.name === newName).id\n              const newDetails = {\n                name : newName,\n                number : newNumber,\n                // id : updateID\n              }\n              personService\n              .update(updateID, newDetails)\n              .then(returnedPerson => {\n                setPersons(persons.map(person => person.id !== updateID ? person : returnedPerson))\n                setNewName('')\n                setNewNumber('')\n              })\n            } else {\n              console.log(\"Pressed Cancel\")\n            }\n        } else {\n            const PersonObject = {\n                name: newName,\n                number: newNumber\n            }\n            personService\n              .create(PersonObject)\n              .then(updateID => {\n                setPersons(persons.concat(updateID))\n                setNewName('')\n                setNewNumber('')\n              })\n        }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNumberChange={handleNumberChange} handleNameChange={handleNameChange}/>\n      <h2>Numbers</h2>\n      <FilteredPersons personfiltered={personfiltered} setRemoveID={setRemoveID}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}